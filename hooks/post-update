#!/bin/bash
#
# This hook does two things:
#
#  1. update the "info" files that allow the list of references to be
#     queries over dumb transports such as http
#
#  2. if this repository looks like it is a non-bare repository, and
#     the checked-out branch is pushed to, then update the working copy.
#     This makes "push" function somewhat similarly to darcs and bzr.
#
# To enable this hook, make this file executable by "chmod +x post-update".

export PATH=/bin:/usr/bin:/usr/sbin:/sbin:/usr/local/bin
. /home/bryan/auto-build/auto-build.conf

git update-server-info

for ref; do
	### Was this deleted?
	git show-ref $ref > /dev/null 2>&1
	if [ $? -ne 0 ]; then
		### Remove from queue if it exists

		$SED -i -e "/^${ref##*/}\ /d" ${AUTO_BUILD_DIR}/queue
		if [ $? -eq 0 ]; then
			echo "Dequeued ${ref##*/} for rebuild"
		fi
		continue
	fi
	short_ref=${ref#refs/tags/}

	### Not a tag
	if [ "${short_ref}" = "${ref}" ]; then
		short_ref=${ref#refs/heads/}

		# Only rebuild next/master
		if ! [ "${short_ref}" = "master" -o "${short_ref}" = "next" ]; then
			continue
		fi
	fi
	grep "^${short_ref} " ${AUTO_BUILD_DIR}/queue > /dev/null 2>&1
	if [ $? -eq 1 ]; then
		### Ref not found, add it to the queue
		echo "${short_ref} $(date +%s)" >> ${AUTO_BUILD_DIR}/queue
		echo "Queued $short_ref for rebuild"
	else
		### Ref updated and it's already queued? Update the TS.
		$SED -i -e "s:^${short_ref} .*:${short_ref} $(date +%s):" ${AUTO_BUILD_DIR}/queue
		echo "Updated rebuild queue for $short_ref"
	fi
done
